// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: config.sql

package db

import (
	"context"
)

const getConfig = `-- name: GetConfig :one
SELECT config_type, data FROM config
WHERE config_type = $1 LIMIT 1
`

func (q *Queries) GetConfig(ctx context.Context, configType string) (Config, error) {
	row := q.db.QueryRow(ctx, getConfig, configType)
	var i Config
	err := row.Scan(&i.ConfigType, &i.Data)
	return i, err
}

const updateConfig = `-- name: UpdateConfig :exec
INSERT INTO config(
        config_type,
        data
    ) VALUES ($1, $2)
    ON CONFLICT (config_type) DO UPDATE 
        SET 
        data = excluded.data
`

type UpdateConfigParams struct {
	ConfigType string     `json:"config_type"`
	Data       ConfigData `json:"data"`
}

func (q *Queries) UpdateConfig(ctx context.Context, arg UpdateConfigParams) error {
	_, err := q.db.Exec(ctx, updateConfig, arg.ConfigType, arg.Data)
	return err
}
